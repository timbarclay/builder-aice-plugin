{"version":3,"file":"plugin-ai-generator.umd.js","sources":["../src/GeneratorForm.tsx","../src/Preview.tsx","../src/GeneratorPane.tsx","../src/AiGenerator.tsx"],"sourcesContent":["import React from 'react';\nimport { jsx } from '@emotion/core';\n\nexport default function GeneratorForm() {\n  return <div>\n    <h1>GeneratorForm</h1>\n  </div>\n}","import React from 'react';\nimport { jsx } from '@emotion/core';\n\nexport default function Preview() {\n  return <div>Preview</div>\n}","import React from 'react';\nimport { jsx } from '@emotion/core';\nimport { Grid } from '@material-ui/core';\nimport GeneratorForm from './GeneratorForm';\nimport Preview from './Preview';\n\nexport default function GeneratorPane({ lessonData }: { lessonData: Map<string, any> }) {\n  return (\n    <Grid container css={{ height: '100%' }}>\n      <Grid item xs={12} lg={6}>\n        <GeneratorForm />\n      </Grid>\n      <Grid item xs={12} lg={6}>\n        <Preview />\n      </Grid>\n    </Grid>\n  )\n}","/** @jsx jsx */\nimport React, { useState } from 'react';\nimport { jsx } from '@emotion/core';\nimport { Builder } from '@builder.io/sdk';\nimport { Grid, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField } from '@material-ui/core';\nimport GeneratorPane from './GeneratorPane';\nimport { ApplicationContext } from './interfaces/application-context';\n\n\nexport default function AiGenerator({context}: {context: ApplicationContext}) {\n  console.log('context', context)\n  const organisation = context.user.organization\n  const settings = organisation.value.settings.plugins\n\n  const [clientId, setClientId] = useState<string | null>(settings.get('aiClientId'));\n  const [clientSecret, setClientSecret] = useState<string | null>(settings.get('aiClientSecret'));\n  const [awsAccessKeyId, setAwsAccessKeyId] = useState<string | null>(settings.get('aiAwsAccessKeyId'));\n  const [awsSecretAccessKey, setAwsSecretAccessKey] = useState<string | null>(settings.get('aiAwsSecretAccessKey'));\n  const [modalOpen, setModalOpen] = useState(false);\n  const [formData, setFormData] = useState({\n    clientId: clientId || '',\n    clientSecret: clientSecret || '',\n    awsAccessKeyId: awsAccessKeyId || '',\n    awsSecretAccessKey: awsSecretAccessKey || ''\n  });\n\n  \n  \n  //const organisation = context.user.organization;\n  const type = context.designerState?.editingModel?.name\n\n  if (type !== 'lesson') {\n    return <div css={{ padding: 16, height: '100vh' }}>\n      <Typography variant=\"h4\" css={{ marginBottom: 16 }}>\n        Sorry, AI Generator is currently only available for lessons\n      </Typography>\n    </div>\n  }\n\n  const lessonData = context.designerState?.editingContentModel?.data;\n  if (!lessonData) {\n    return <div css={{ padding: 16, height: '100vh' }}>\n      <Typography variant=\"h4\" css={{ marginBottom: 16 }}>\n        No lesson data found\n      </Typography>\n    </div>\n  }\n\n  const requiresCredentials = !(clientId && clientSecret && awsAccessKeyId && awsSecretAccessKey)\n\n  const handleSaveCredentials = () => {\n    setClientId(formData.clientId);\n    setClientSecret(formData.clientSecret);\n    setAwsAccessKeyId(formData.awsAccessKeyId);\n    setAwsSecretAccessKey(formData.awsSecretAccessKey);\n    \n    settings.set('aiClientId', formData.clientId);\n    settings.set('aiClientSecret', formData.clientSecret);\n    settings.set('aiAwsAccessKeyId', formData.awsAccessKeyId);\n    settings.set('aiAwsSecretAccessKey', formData.awsSecretAccessKey);\n    organisation.save()\n    \n    setModalOpen(false);\n  };\n\n  const model = lessonData.get('name')\n  \n  return (\n    <div css={{ padding: 16, height: '100vh' }}>\n      <div css={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 16 }}>\n        <Typography variant=\"h4\">\n          Use AICE to generate lesson resources for {model}\n        </Typography>\n        <Button variant=\"outlined\" onClick={() => setModalOpen(true)}>\n          Set Credentials\n        </Button>\n      </div>\n      <GeneratorPane lessonData={lessonData} />\n      \n      <Dialog open={modalOpen} onClose={() => setModalOpen(false)} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>Set AI Credentials</DialogTitle>\n        <DialogContent css={{ paddingTop: 20 }}>\n          <div css={{ marginBottom: 16 }}>\n            <TextField\n              autoFocus\n              label=\"Client ID\"\n              fullWidth\n              variant=\"outlined\"\n              value={formData.clientId}\n              onChange={(e) => setFormData({...formData, clientId: e.target.value})}\n            />\n          </div>\n          <div css={{ marginBottom: 16 }}>\n            <TextField\n              label=\"Client Secret\"\n              type=\"password\"\n              fullWidth\n              variant=\"outlined\"\n              value={formData.clientSecret}\n              onChange={(e) => setFormData({...formData, clientSecret: e.target.value})}\n            />\n          </div>\n          <div css={{ marginBottom: 16 }}>\n            <TextField\n              label=\"AWS Access Key ID\"\n              fullWidth\n              variant=\"outlined\"\n              value={formData.awsAccessKeyId}\n              onChange={(e) => setFormData({...formData, awsAccessKeyId: e.target.value})}\n            />\n          </div>\n          <div css={{ marginBottom: 16 }}>\n            <TextField\n              label=\"AWS Secret Access Key\"\n              type=\"password\"\n              fullWidth\n              variant=\"outlined\"\n              value={formData.awsSecretAccessKey}\n              onChange={(e) => setFormData({...formData, awsSecretAccessKey: e.target.value})}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setModalOpen(false)}>Cancel</Button>\n          <Button onClick={handleSaveCredentials} color=\"primary\">Save</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nBuilder.register('editor.mainTab', {\n  name: 'âœ¨ AI Generator',\n  component: AiGenerator,\n});\n"],"names":["React","Grid","useState","jsx","Typography","Button","Dialog","DialogTitle","DialogContent","TextField","DialogActions","Builder"],"mappings":"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"}