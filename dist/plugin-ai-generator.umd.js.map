{"version":3,"file":"plugin-ai-generator.umd.js","sources":["../src/GeneratorForm.tsx","../src/Preview.tsx","../src/GeneratorPane.tsx","../src/AiGenerator.tsx"],"sourcesContent":["/** @jsx jsx */\nimport React, { useState } from 'react';\nimport { jsx } from '@emotion/core';\nimport { TextField, Typography, Paper, Button } from '@material-ui/core';\nimport { toJS } from 'mobx';\nimport { EngineParameters } from './GeneratorPane';\n\ninterface GeneratorFormProps {\n  lessonData: Map<string, any>;\n  disabled: boolean;\n  onGenerate: (parameters: EngineParameters) => void;\n}\n\nexport default function GeneratorForm({ lessonData, disabled, onGenerate }: GeneratorFormProps) {\n  const [title, setTitle] = useState(lessonData.get('name') || '');\n  const [learningObjective, setLearningObjective] = useState(lessonData.get('skill')?.value.data.learningObjective || '');\n  const [learningGoal, setLearningGoal] = useState(lessonData.get('skill')?.value.data.learningGoal || '');\n  const [targetWordCount, setTargetWordCount] = useState(300);\n  const [vocabularyWords, setVocabularyWords] = useState(\n    toJS(lessonData.get('vocabularyWords'))?.map((w: any) => w?.word?.Default).join(', ') || ''\n  );\n\n  const handleGenerate = () => {\n    onGenerate({\n      title,\n      learningObjective,\n      learningGoal,\n      targetWordCount,\n      vocabularyWords: vocabularyWords.split(',').map((w: string) => w.trim()).filter((w: string) => w),\n    })\n  };\n\n  return (\n    <Paper css={{ padding: 24, height: '100%' }}>\n      <Typography variant=\"h6\" css={{ marginBottom: 16 }}>\n        Content Generation Settings\n      </Typography>\n      \n      <div css={{ marginBottom: 16 }}>\n        <TextField\n          label=\"Title\"\n          fullWidth\n          variant=\"outlined\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n      </div>\n      \n      <div css={{ marginBottom: 16 }}>\n        <TextField\n          label=\"Learning Objective\"\n          fullWidth\n          multiline\n          rows={2}\n          variant=\"outlined\"\n          value={learningObjective}\n          onChange={(e) => setLearningObjective(e.target.value)}\n        />\n      </div>\n      \n      <div css={{ marginBottom: 16 }}>\n        <TextField\n          label=\"Learning Goal\"\n          fullWidth\n          multiline\n          rows={2}\n          variant=\"outlined\"\n          value={learningGoal}\n          onChange={(e) => setLearningGoal(e.target.value)}\n        />\n      </div>\n      \n      <div css={{ marginBottom: 16 }}>\n        <TextField\n          label=\"Target Word Count\"\n          fullWidth\n          type=\"number\"\n          variant=\"outlined\"\n          value={targetWordCount}\n          onChange={(e) => setTargetWordCount(parseInt(e.target.value) || 300)}\n        />\n      </div>\n      \n      <div css={{ marginBottom: 24 }}>\n        <TextField\n          label=\"Vocabulary Words\"\n          fullWidth\n          multiline\n          rows={3}\n          variant=\"outlined\"\n          placeholder=\"Enter words separated by commas\"\n          value={vocabularyWords}\n          onChange={(e) => setVocabularyWords(e.target.value)}\n          helperText=\"Separate multiple words with commas\"\n        />\n      </div>\n      \n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n        size=\"large\"\n        onClick={handleGenerate}\n        disabled={disabled}\n      >\n        Generate Content\n      </Button>\n    </Paper>\n  );\n}","import React from 'react';\nimport { jsx } from '@emotion/core';\n\nexport default function Preview() {\n  return <div>Preview</div>\n}","import React from 'react';\nimport { jsx } from '@emotion/core';\nimport { Grid } from '@material-ui/core';\nimport GeneratorForm from './GeneratorForm';\nimport Preview from './Preview';\n\ninterface GeneratorPaneProps {\n  lessonData: Map<string, any>\n  clientId: string | null\n  clientSecret: string | null\n  awsAccessKeyId: string | null\n  awsSecretAccessKey: string | null\n}\n\nexport interface EngineParameters {\n  title: string\n  learningObjective: string\n  learningGoal: string\n  targetWordCount: number\n  vocabularyWords: string[]\n}\n\nexport default function GeneratorPane({ lessonData, clientId, clientSecret, awsAccessKeyId, awsSecretAccessKey }: GeneratorPaneProps) {\n  function onGenerate(parameters: EngineParameters) {\n    console.log('onGenerate', parameters)\n  }\n\n  return (\n    <Grid container css={{ height: '100%' }}>\n      <Grid item xs={12} lg={6}>\n        <GeneratorForm lessonData={lessonData} disabled={!clientId || !clientSecret || !awsAccessKeyId || !awsSecretAccessKey} onGenerate={onGenerate} />\n      </Grid>\n      <Grid item xs={12} lg={6}>\n        <Preview />\n      </Grid>\n    </Grid>\n  )\n}","/** @jsx jsx */\nimport React, { useState } from 'react';\nimport { jsx } from '@emotion/core';\nimport { Builder } from '@builder.io/sdk';\nimport { Grid, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField } from '@material-ui/core';\nimport GeneratorPane from './GeneratorPane';\nimport { ApplicationContext } from './interfaces/application-context';\n\n\nexport default function AiGenerator({context}: {context: ApplicationContext}) {\n  console.log('context', context)\n  const organisation = context.user.organization\n  const settings = organisation.value.settings.plugins\n\n  const [clientId, setClientId] = useState<string | null>(settings.get('aiClientId'));\n  const [clientSecret, setClientSecret] = useState<string | null>(settings.get('aiClientSecret'));\n  const [awsAccessKeyId, setAwsAccessKeyId] = useState<string | null>(settings.get('aiAwsAccessKeyId'));\n  const [awsSecretAccessKey, setAwsSecretAccessKey] = useState<string | null>(settings.get('aiAwsSecretAccessKey'));\n  const [modalOpen, setModalOpen] = useState(false);\n  const [formData, setFormData] = useState({\n    clientId: clientId || '',\n    clientSecret: clientSecret || '',\n    awsAccessKeyId: awsAccessKeyId || '',\n    awsSecretAccessKey: awsSecretAccessKey || ''\n  });\n\n  \n  \n  //const organisation = context.user.organization;\n  const type = context.designerState?.editingModel?.name\n\n  if (type !== 'lesson') {\n    return <div css={{ padding: 16, height: '100vh' }}>\n      <Typography variant=\"h4\" css={{ marginBottom: 16 }}>\n        Sorry, AI Generator is currently only available for lessons\n      </Typography>\n    </div>\n  }\n\n  const lessonData = context.designerState?.editingContentModel?.data;\n  if (!lessonData) {\n    return <div css={{ padding: 16, height: '100vh' }}>\n      <Typography variant=\"h4\" css={{ marginBottom: 16 }}>\n        No lesson data found\n      </Typography>\n    </div>\n  }\n\n  const requiresCredentials = !(clientId && clientSecret && awsAccessKeyId && awsSecretAccessKey)\n\n  const handleSaveCredentials = () => {\n    setClientId(formData.clientId);\n    setClientSecret(formData.clientSecret);\n    setAwsAccessKeyId(formData.awsAccessKeyId);\n    setAwsSecretAccessKey(formData.awsSecretAccessKey);\n    \n    settings.set('aiClientId', formData.clientId);\n    settings.set('aiClientSecret', formData.clientSecret);\n    settings.set('aiAwsAccessKeyId', formData.awsAccessKeyId);\n    settings.set('aiAwsSecretAccessKey', formData.awsSecretAccessKey);\n    organisation.save()\n    \n    setModalOpen(false);\n  };\n\n  const model = lessonData.get('name')\n  \n  return (\n    <div css={{ padding: 16, height: '100vh' }}>\n      <div css={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 16 }}>\n        <Typography variant=\"h4\">\n          Use AICE to generate lesson resources for {model}\n        </Typography>\n        <Button variant=\"outlined\" onClick={() => setModalOpen(true)}>\n          Set Credentials\n        </Button>\n      </div>\n      {!requiresCredentials && <GeneratorPane lessonData={lessonData} clientId={clientId} clientSecret={clientSecret} awsAccessKeyId={awsAccessKeyId} awsSecretAccessKey={awsSecretAccessKey} />}\n      \n      <Dialog open={modalOpen} onClose={() => setModalOpen(false)} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>Set AI Credentials</DialogTitle>\n        <DialogContent css={{ paddingTop: 20 }}>\n          <div css={{ marginBottom: 16 }}>\n            <TextField\n              autoFocus\n              label=\"Client ID\"\n              fullWidth\n              variant=\"outlined\"\n              value={formData.clientId}\n              onChange={(e) => setFormData({...formData, clientId: e.target.value})}\n            />\n          </div>\n          <div css={{ marginBottom: 16 }}>\n            <TextField\n              label=\"Client Secret\"\n              type=\"password\"\n              fullWidth\n              variant=\"outlined\"\n              value={formData.clientSecret}\n              onChange={(e) => setFormData({...formData, clientSecret: e.target.value})}\n            />\n          </div>\n          <div css={{ marginBottom: 16 }}>\n            <TextField\n              label=\"AWS Access Key ID\"\n              fullWidth\n              variant=\"outlined\"\n              value={formData.awsAccessKeyId}\n              onChange={(e) => setFormData({...formData, awsAccessKeyId: e.target.value})}\n            />\n          </div>\n          <div css={{ marginBottom: 16 }}>\n            <TextField\n              label=\"AWS Secret Access Key\"\n              type=\"password\"\n              fullWidth\n              variant=\"outlined\"\n              value={formData.awsSecretAccessKey}\n              onChange={(e) => setFormData({...formData, awsSecretAccessKey: e.target.value})}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setModalOpen(false)}>Cancel</Button>\n          <Button onClick={handleSaveCredentials} color=\"primary\">Save</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nBuilder.register('editor.mainTab', {\n  name: '✨ AI Generator',\n  component: AiGenerator,\n});\n"],"names":["useState","toJS","jsx","Paper","Typography","TextField","Button","React","Grid","Dialog","DialogTitle","DialogContent","DialogActions","Builder"],"mappings":"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"}